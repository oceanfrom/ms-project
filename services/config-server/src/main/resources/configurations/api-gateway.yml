spring:
  security:
    jwt:
      secret: "YW5kcmVpc29ueWFwaXRlcjIwMjVmZWI="
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
      routes:
        - id: customer-service
          uri: lb:http://customer-service
          predicates:
            - Path=/api/v1/customers/**
          filters:
            - name: CircuitBreaker
              args:
                name: customerCircuitBreaker
                fallbackUri: forward:/fallback/customer-service

        - id: order-service
          uri: lb:http://order-service
          predicates:
            - Path=/api/v1/orders/**
          filters:
            - name: CircuitBreaker
              args:
                name: orderCircuitBreaker
                fallbackUri: forward:/fallback/order-service

        - id: product-service
          uri: lb:http://product-service
          predicates:
            - Path=/api/v1/products/**
          filters:
            - name: CircuitBreaker
              args:
                name: productCircuitBreaker
                fallbackUri: forward:/fallback/product-service

        - id: auth-service
          uri: lb:http://auth-service
          predicates:
            - Path=/api/v1/auth/**
          filters:
            - name: CircuitBreaker
              args:
                name: authCircuitBreaker
                fallbackUri: forward:/fallback/auth-service

        - id: discovery-server
          uri: http://localhost:8761
          predicates:
            - Path=/eureka/web
          filters:
            - SetPath=/
            - AddRequestHeader=Authorization, Basic ZXVyZWthOnBhc3N3b3Jk

        - id: discovery-server-static
          uri: http://localhost:8761
          predicates:
            - Path=/eureka/**
          filters:
            - AddRequestHeader=Authorization, Basic ZXVyZWthOnBhc3N3b3Jk


management:
  health:
    circuit-breakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include:
          - health
  endpoint:
    health:
      show-details: always

resilience4j.circuitbreaker:
  instances:
    customerCircuitBreaker:
      registerHealthIndicator: true
      slidingWindowSize: 10
      failureRateThreshold: 50
      waitDurationInOpenState: 10s
      permittedNumberOfCallsInHalfOpenState: 3
      minimumNumberOfCalls: 5
    orderCircuitBreaker:
      registerHealthIndicator: true
      slidingWindowSize: 10
      failureRateThreshold: 50
      waitDurationInOpenState: 10s
      permittedNumberOfCallsInHalfOpenState: 3
      minimumNumberOfCalls: 5
    productCircuitBreaker:
      registerHealthIndicator: true
      slidingWindowSize: 10
      failureRateThreshold: 50
      waitDurationInOpenState: 10s
      permittedNumberOfCallsInHalfOpenState: 3
      minimumNumberOfCalls: 5
    authCircuitBreaker:
      registerHealthIndicator: true
      slidingWindowSize: 10
      failureRateThreshold: 50
      waitDurationInOpenState: 10s
      permittedNumberOfCallsInHalfOpenState: 3
      minimumNumberOfCalls: 5

timelimiter:
  instances:
    customerCircuitBreaker:
      timeout-duration: 3s
    orderCircuitBreaker:
      timeout-duration: 3s
    productCircuitBreaker:
      timeout-duration: 3s
    authCircuitBreaker:
      timeout-duration: 3s
retry:
  instances:
    customerCircuitBreaker:
      max-attempts: 3
      wait-duration: 5s
    orderCircuitBreaker:
      max-attempts: 3
      wait-duration: 5s
    productCircuitBreaker:
      max-attempts: 3
      wait-duration: 5s
    authCircuitBreaker:
      max-attempts: 3
      wait-duration: 5s

server:
  port: 8111

application:
  config:
    auth-url: http://auth-service/api/v1/auth
